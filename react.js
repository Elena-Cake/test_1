// переместить в теорию
// ________________________
// SPA (Simple Page App
// ________________________

// история:

//          tradition page lifetime:

// ---------      запрос--------->      ---------
// |       |      <----------HTML,js    |       |   //вся разметка в html, js маленький только для действий кнопок
// |Client |  есть что-либо новое? -->  |Server |
// |       |      <----------HTML       |       |   //даже если поменялся 1 символ
// ---------                            ---------   //заново идет скачка всего приложения

// раньше присылался большой html и маленький js, страница полностью отрисовывалась заново
// при любых изменениях (новое сообщение или проставление лайка, например)


//          Simple Page App:

// ---------      запрос--------->      ---------
// |       |      <----------html,JS    |       |   //html маленький, основная разметка и логика в js
// |Client |  есть что-либо новое? -->  |Server |
// |       |      <----------{json}     |       |
// ---------                            ---------

// все изменения внешнего интерфейса происходят на стороне клиента (раньше это делал сервер)

// + огромная экономия трафика клиента
// + разгрузка сервера
// + появление профессии фронта впринципе то)



// доп материал 
// modules AMD
// require.js
// ________________________________________________



// JSX  - язык, который позволяет писать html внутри скрипта js

// ________________
// Компонента - ф-ция, возвращающая разметку jsx
// создавая компоненту, мы как бы создаем тег

// компонента App:
const App = () => {
    return (
        <div className="App">
            что-то
        </div>
    );
}
// может возвращать только один корневой тег!

// _________________

// в git bash можно открыть интерфейс комитов
// gitk --all&

// ________________________

// css модули

// для написания коротких названий классов, но сохранение правил внутри компоненты
// можно сделать css модуль:

// 1. назвать css файл как Name.module.css
// 2. импортировать как класс : import s from './Name.module.css'
        // тогда s это объект типа
        // class : 'Name_class__randomNumbers'

// 3. в разметку писать className={s.class}

// _______________

